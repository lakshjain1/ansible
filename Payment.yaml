- name: Configure Payment
  hosts: localhost
  become: yes
  tasks:
    - name: Installing python
      ansible.builtin.yum:
        name: "{{item}}"
        state: installed
      loops:
      - python36
      - gcc
      - python3-devel

    - name: checking
      ansible.builtin.command: id roboshop
      register: output1
      ignore_errors: true

    - name: print command out
      ansible.builtin.debug:
        msg: "output is: {{output1}}"

    - name: print exit status
      ansible.builtin.debug:
        msg: "{{output1.rc}}"

    - when: output1.rc != 0
      name: create user roboshop
      ansible.builtin.user:
        name: roboshop
        state: present

    - name: checking dir
      ansible.builtin.stat:
        path: /app
      register: dir_info
    
    - name: creating dir if not exist
      when: not dir_info.stat.exists
      ansible.builtin.file:
        path: /app
        state: directory
        mode: '0755'

    - name: Perform tasks when directory exists
      ansible.builtin.debug:
        msg: "Directory exists, proceed with tasks"
      when: dir_info.stat.exists

    - name: Downloading application
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/payment.zip
        dest: /tmp/payment.zip
    
    - name: unziping payment
      ansible.builtin.unarchive:
        src: /tmp/payment.zip
        dest: /app
        remote_src: yes

    - name: installing dependencies
      ansible.builtin.command: pip3.6 install -r requirements.txt
      args:
        chdir: /app

    - name: copying payment.service
      ansible.builtin.copy:
        src: payment.service
        path: /etc/systemd/system/payment.service
    
    - name: Reload systemd daemon and restart a service
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: restart payment
      ansible.builtin.service:
        name: payment
        state: restarted
        enabled: true